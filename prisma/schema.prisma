datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int    @id @default(autoincrement())
  user     String
  password String
  excluido String @default("N") // Coluna para controlar exclusão (N = ativo, S = excluído)
}

model Supplier {
  id           Int      @id @default(autoincrement())
  company_name String
  cnpj         String
  address      String
  contact      String
  buys         Buy[] // Relacionamento com a tabela Buy
  baskets      Basket[] // Relacionamento com a tabela Basket
  excluido     String   @default("N") // Coluna para controlar exclusão (N = ativo, S = excluído)
}

model Buy {
  id            Int      @id @default(autoincrement())
  date          DateTime
  quantity      Int
  unit_value    Float
  total_value   Float
  checking_copy String?
  supplierId    Int
  excluido      String   @default("N") // Coluna para controlar exclusão (N = ativo, S = excluído)

  supplier Supplier @relation(fields: [supplierId], references: [id])
  baskets  Basket[] // Relacionamento com a tabela Basket
}

model Receiver {
  id            Int      @id @default(autoincrement())
  name          String
  address       String
  contact       String
  cpf           String
  date_of_birth DateTime
  observation   String?
  excluido      String   @default("N") // Coluna para controlar exclusão (N = ativo, S = excluído)

  donations Donation[] // Relacionamento com a tabela Donation
  baskets   Basket[] // Relacionamento com a tabela Basket
}

model Basket {
  id         Int      @id @default(autoincrement())
  products   String
  validity   DateTime
  status     String
  supplierId Int?
  receiverId Int?
  buyId      Int?
  excluido   String   @default("N") // Coluna para controlar exclusão (N = ativo, S = excluído)

  supplier Supplier?  @relation(fields: [supplierId], references: [id])
  receiver Receiver?  @relation(fields: [receiverId], references: [id])
  buy      Buy?       @relation(fields: [buyId], references: [id])
  Donation Donation[] // Relacionamento com a tabela Donation
}

model Donation {
  id         Int      @id @default(autoincrement())
  justify    Justify
  start_date DateTime
  end_date   DateTime
  basketId   Int
  receiverId Int
  excluido   String   @default("N") // Coluna para controlar exclusão (N = ativo, S = excluído)

  basket   Basket   @relation(fields: [basketId], references: [id])
  receiver Receiver @relation(fields: [receiverId], references: [id])
}

// Enum para justificativas
enum Justify {
  VIVIDA
  ORFAO
  PROBLEMAS_FINANCEIROS

  @@map("justify")
}
